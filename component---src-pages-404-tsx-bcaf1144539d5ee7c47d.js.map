{"version":3,"sources":["webpack:///./src/components/seo.tsx","webpack:///./src/pages/404.tsx"],"names":["SEO","props","lang","meta","keywords","description","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","title","titleTemplate","content","name","property","author","concat","length","join","NotFoundPage"],"mappings":"2FAAA,4FAwBaA,EAAM,SAACC,GAClB,IAAMC,EAAOD,EAAMC,MAAQ,KACrBC,EAAOF,EAAME,MAAQ,GACrBC,EAAWH,EAAMG,UAAY,GAC7BC,EAAcJ,EAAMI,aAAe,GAEjCC,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBH,GAAeC,EAAKG,aAAaJ,YAEzD,OACE,kBAAC,IAAD,CACEK,eAAgB,CACdR,QAEFS,MAAOV,EAAMU,MACbC,cAAa,QAAUN,EAAKG,aAAaE,MACzCR,KAAM,CACJ,CACEU,QAASL,EACTM,KAAM,eAER,CACED,QAASZ,EAAMU,MACfI,SAAU,YAEZ,CACEF,QAASL,EACTO,SAAU,kBAEZ,CACEF,QAAS,UACTE,SAAU,WAEZ,CACEF,QAAS,UACTC,KAAM,gBAER,CACED,QAASP,EAAKG,aAAaO,OAC3BF,KAAM,mBAER,CACED,QAASZ,EAAMU,MACfG,KAAM,iBAER,CACED,QAASL,EACTM,KAAM,wBAGPG,OACCb,EAASc,OAAS,EACd,CACEL,QAAST,EAASe,KAAT,MACTL,KAAM,YAER,IAELG,OAAOd,O,oCC9FhB,qGAMaiB,EAAe,SAACnB,GAC3B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKU,MAAM,mBACX,4CAOSS","file":"component---src-pages-404-tsx-bcaf1144539d5ee7c47d.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\n\ninterface Meta {\n  name: string\n  content: string\n}\n\ninterface Props {\n  title: string\n  lang?: string\n  meta?: Meta[]\n  keywords?: string[]\n  description?: string\n}\n\nexport const SEO = (props: Props) => {\n  const lang = props.lang || \"en\"\n  const meta = props.meta || []\n  const keywords = props.keywords || []\n  const description = props.description || \"\"\n\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={props.title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: `description`,\n        },\n        {\n          content: props.title,\n          property: `og:title`,\n        },\n        {\n          content: metaDescription,\n          property: `og:description`,\n        },\n        {\n          content: `website`,\n          property: `og:type`,\n        },\n        {\n          content: `summary`,\n          name: `twitter:card`,\n        },\n        {\n          content: site.siteMetadata.author,\n          name: `twitter:creator`,\n        },\n        {\n          content: props.title,\n          name: `twitter:title`,\n        },\n        {\n          content: metaDescription,\n          name: `twitter:description`,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                content: keywords.join(`, `),\n                name: `keywords`,\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n","import { graphql, PageRendererProps, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport { Layout } from \"../components/layout\"\nimport { SEO } from \"../components/seo\"\n\ntype Props = PageRendererProps\n\nexport const NotFoundPage = (props: Props) => {\n  return (\n    <Layout>\n      <SEO title=\"404: Not Found\" />\n      <div>\n        not found\n      </div>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n"],"sourceRoot":""}