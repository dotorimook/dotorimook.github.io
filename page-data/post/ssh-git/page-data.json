{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/post/ssh-git/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"15fe23e2-73ae-5c9d-bfb8-d9f6d276dc00","excerpt":"Github는 패스워드 기반 인증을 지원하지 않기로 했다. 대표적인 무료 git 저장소인 github가 패스워드기반 인증을 사용하지 않겠다고 발표했습니다. 앞으로는 github를 이용할 때에는 1. 토큰 기반 인증 또는 2. SSH 기반 인증을 해야합니다. github…","html":"<h1>Github는 패스워드 기반 인증을 지원하지 않기로 했다.</h1>\n<p>대표적인 무료 git 저장소인 <strong>github</strong>가 패스워드기반 인증을 사용하지 않겠다고 발표했습니다. 앞으로는 <strong>github</strong>를 이용할 때에는 <strong>1. 토큰 기반 인증</strong> 또는 <strong>2. SSH 기반 인증</strong>을 해야합니다. github뿐만 아니라 BitBucket이나 gitlab 등 일반적으로 많이 사용하는 git 기반 저장소에서도 많은 경우에 HTTPS기반 인증을 사용하고 있지만, SSH기반 인증 역시 지원하고 있습니다. 저장소의 페이지에 있는 <strong>Clone</strong>버튼을 눌러보면 <strong>Clone with SSH</strong>가 있는데, SSH를 통해서도 저장소를 받을 수 있음을 확인할 수 있는 부분입니다.</p>\n<h1>SSH기반 인증, 그거 어떻게 하는 건데?</h1>\n<p>그럼 슬슬 본론으로 넘어가서, SSH기반으로 인증할 수 있는 절차를 살펴보겠습니다.</p>\n<p>SSH인증을 위해서는 2가지를 해야합니다.</p>\n<ol>\n<li><strong>SSH키 생성</strong></li>\n<li><strong>퍼블릭 키 등록</strong></li>\n</ol>\n<h2>1. SSH 키 생성</h2>\n<p>SSH키라는 것은 <strong>SSH 프로토콜의 접근 크리덴셜</strong>이라고 보면 됩니다. <strong>퍼블릭 키(public key, 공개 키)</strong>와 <strong>프라이빗 키(private key, 개인 키)</strong>를 가지고 있으며, <strong>퍼블릭 키</strong>를 서비스에 등록해 놓으면, <strong>프라이빗 키</strong>를 이용해서 인증하여 접속합니다.</p>\n<p>SSH키를 생성하면 <strong>퍼블릭 키</strong>와 <strong>프라이빗 키</strong>가 나오는데, 이 퍼블릭 키를  github 등 서비스에 등록하여 사용합니다.</p>\n<p>윈도우는 git-bash를 이용하세요.</p>\n<h3>프라이빗 키 생성</h3>\n<p>키 생성은 <code class=\"language-text\">ssh-keygen</code>이라는 명령어를 사용합니다. <code class=\"language-text\">-t</code>, <code class=\"language-text\">-b</code>,  <code class=\"language-text\">-C</code> 등 옵션을 제공합니다.</p>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\">ssh-keygen</code>\n        </deckgo-highlight-code>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\">Generating public/private rsa key pair.\nEnter file in which to save the key (/***/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /***/.ssh/id_rsa.\nYour public key has been saved in /***/.ssh/id_rsa.pub.\nThe key fingerprint is:\n*** ***</code>\n        </deckgo-highlight-code>\n<p>따로 경로를 지정하지 않으면, 일반적으로 <em>~/.ssh</em> 경로에 <strong>id_rsa</strong>와 <strong>id_rsa.pub</strong> 라는 파일이 생성됩니다.</p>\n<h3>프라이빗 키를 등록하기</h3>\n<p>퍼블릭 키를 서비스에 등록하여 사용하기 전에 <code class=\"language-text\">ssh-add</code> 커맨드를 이용해서 개인 키 파일을 <strong>ssh-agent</strong> 에 등록합니다.</p>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\">ssh-add ~/.ssh/id_rsa</code>\n        </deckgo-highlight-code>\n<p>키를 다른 경로에 등록했을 경우 각 경로로 사용해야 합니다.</p>\n<h3>퍼블릭 키를 서비스에 등록하기</h3>\n<p><em>pub</em> 확장자는 <strong>퍼블릭 키(public key)</strong> 를 의미합니다. <code class=\"language-text\">cat</code> 커맨드를 이용해서 그 내용을 터미널에 띄울 수 있습니다.</p>\n<deckgo-highlight-code language=\"bash\"  >\n          <code slot=\"code\">cat ~/.ssh/id_rsa.pub\nssh-rsa AAAB3Nza어쩌구저쩌구..</code>\n        </deckgo-highlight-code>\n<p>터미널에 떠 있는 모든 내용을 복사해서 서비스에 등록을 해서 사용하면 됩니다.</p>\n<ul>\n<li>\n<p>Github</p>\n<ul>\n<li>Settings > SSH and GPG Keys 메뉴에서 <strong>New **SSH Key</strong> 버튼을 누르고 키를 title과 key를 입력 후 <strong>Add SSH Key</strong> 버튼을 눌러 등록</li>\n</ul>\n</li>\n<li>\n<p>Gitlab</p>\n<ul>\n<li>Edit Profile > SSH Keys 에 Key를 붙여넣고 <em>Title, Expires at</em> (유효기간)을 입력 후 <strong>Add Key</strong> 버튼을 누른다.</li>\n</ul>\n</li>\n<li>\n<p>Bitbucket</p>\n<ul>\n<li>Personal settings > Security > SSH keys 메뉴에서 <strong>Add Key</strong> 버튼을 누른 이후 <em>Label</em> 과 <em>Key</em> 값 입력 후 <strong>Add Key</strong> 버튼을 눌러 등록</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"SSH로 git 사용하기","date":"March 14, 2021","description":null}}},"pageContext":{"next":{"fields":{"slug":"/post/2021-05-02-check-intel-mac-app copy/"},"frontmatter":{"title":"내가 쓰는 앱이 M1 맥용일까? 인텔용일까? 애플 실리콘용 앱 확인하는 방법"}},"previous":{"fields":{"slug":"/post/git-pre-receive-hook-declined-error/"},"frontmatter":{"title":"Git push error pre-receive hook declined 에러"}},"slug":"/post/ssh-git/"}},"staticQueryHashes":["2880150720","63159454"]}