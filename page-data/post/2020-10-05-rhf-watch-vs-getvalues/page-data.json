{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/post/2020-10-05-rhf-watch-vs-getvalues/","result":{"data":{"site":{"siteMetadata":{"title":"dotorimook's blog","author":"Dotorimook"}},"markdownRemark":{"id":"7aac67db-dabc-57eb-b6bb-cd3752131b3e","excerpt":"React Hook Form은 14.7k에 빛나는 리액트용 폼 라이브러리이다.\n폼 생성과 검증 등 개발 과정을 간소화할 수 있고, 폼 생성 과정과 코드를 좀 더 규격화 할 수 있다는 장점이 있다.\n다른 폼 라이브러리에 비해서 React Hooks…","html":"<p><strong>React Hook Form</strong>은 14.7k에 빛나는 리액트용 폼 라이브러리이다.\n폼 생성과 검증 등 개발 과정을 간소화할 수 있고, 폼 생성 과정과 코드를 좀 더 규격화 할 수 있다는 장점이 있다.\n다른 폼 라이브러리에 비해서 React Hooks 형태로 사용할 수 있다는 점과 빠르다는 장점도 있다.\n또한, 문서가 <strong>굉장히</strong> 잘 구성되어있다.ㅎㅎ (완벽하지는 않지만 번역도 되어있는 듯 하다.)</p>\n<p><strong>React Hook Form</strong>사용에 필수적인 <code class=\"language-text\">getValues</code>와 <code class=\"language-text\">watch</code>의 차이점에 대하여 메모해두고자 한다.</p>\n<h2><code class=\"language-text\">watch</code> vs <code class=\"language-text\">getValues</code></h2>\n<p><code class=\"language-text\">getValues</code>와 <code class=\"language-text\">watch</code>는 <strong>React Hook Form</strong>을 값을 나타내거나 확인하는 등에 사용하기 때문에 필수적으로 사용하게 된다.\n<code class=\"language-text\">watch</code>를 대부분 사용하지만…</p>\n<p>이미 <a href=\"https://react-hook-form.com/faqs/#watchvsgetValuesvsstate\">공식 문서</a>에서는 <code class=\"language-text\">watch</code>와 <code class=\"language-text\">getVAlues</code>에 대한 차이점을 아래와 같이 설명하고 있다.</p>\n<blockquote>\n<p>watch: subscribe to either all inputs or the specified inputs changes via event listener and re-render based on which fields that are subscribed. Check out this codesandbox for actual behaviour.\ngetValues: get values that are stored inside the custom hook as reference, fast and cheap. This method doesn’t trigger re-render.</p>\n</blockquote>\n<p>아주 친절하게 <a href=\"https://codesandbox.io/s/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus\">codesandbox</a>로 예제도 제공하고 있다.</p>\n<iframe src=\"https://codesandbox.io/embed/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus?fontsize=14&hidenavigation=1&theme=dark\"\n  style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n  title=\"React Hook Form - watch with Radio Buttons and Select examples\"\n  allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n  sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n></iframe>\n<p>핵심은 <code class=\"language-text\">watch</code>는 <strong>값 변화에 대해 컴포넌트가 re-render가 이루어지고</strong> <code class=\"language-text\">getValues</code>는 그렇지 않다는 점이다.</p>\n<p><code class=\"language-text\">watch</code>는 input의 변화를 <strong>subscribe</strong>해서 변화에 따라 re-render가 이루어진다.</p>\n<p>반면 <code class=\"language-text\">getValues</code>는 RHF 내에 render와 관계없이 저장된 value를 가져올 때에 사용된다. <strong>re-render</strong>가 이루어지지 않는다. 따라서 빠르고 cheap한 메소드이다.</p>\n<p>개발을 하다보면 <code class=\"language-text\">watch</code>와 <code class=\"language-text\">getValeus</code>의 깂이 다른 시점이 있을 수 있는데, 이 차이점에서 비롯된 것이라고 볼 수 있다.</p>\n<h3>Reference</h3>\n<ol>\n<li><a href=\"https://react-hook-form.com/faqs/#watchvsgetValuesvsstate\">React Hook Form 문서</a></li>\n<li><a href=\"https://codesandbox.io/s/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus\">codesandbox</a></li>\n</ol>","frontmatter":{"title":"React Hook Form의 watch() vs getValues","date":"October 05, 2020","description":null}}},"pageContext":{"next":{"fields":{"slug":"/post/2020-10-05-jekyll-front-matter-published/"},"frontmatter":{"title":"Jekyll 포스트를 숨기고 싶을 땐 published!"}},"previous":{"fields":{"slug":"/post/2020-09-29-theme-change/"},"frontmatter":{"title":"Jekyll 테마를 바꿔보기"}},"slug":"/post/2020-10-05-rhf-watch-vs-getvalues/"}},"staticQueryHashes":["2880150720","63159454"]}