{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/post/2020-10-09-jekyll-preview-local/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"3769c446-f809-579e-9355-e159b29daf3c","excerpt":"로멀에서 Jekyll을 설치해서 블로그를 꾸며보기 최근 여유가 좀 있어서 Jekyll…","html":"<h1>로멀에서 Jekyll을 설치해서 블로그를 꾸며보기</h1>\n<p>최근 여유가 좀 있어서 <em>Jekyll</em> 본격적으로 꾸며 나가보려는 마음에 이것저것 시도를 해보고 있다.\n새롭게 찾은 테마가 처음 마음에 들긴 했지만, 보다보니 마음에 안들거나 개선시켜 보고 싶은 부분들도 느껴지고, 개인적으로 좀 욕심도 생겨서 지금 테마를 진화시켜나가보려고 마음을 먹었다.\n기본적으로 <em>Jekyll</em>은 원하는 플러그인을 붙이거나 <em>js</em>나 <em>scss</em>도 지원하는 등 손쉽게 원하는 커스터마이즈가 가능하다. (본 테마를 적용하게 되면서 알게된 사실이다..ㅎㅎ)</p>\n<p>그래서 처음엔 간단한 수정을 하기 위해서… 로컬에 별도의 프로젝트에서 js와 scss를 테스트 한 다음 이 블로그에 내용을 업데이트해서 푸시해서 확인하는 형식으로 업데이트 했다.\n하지만 이런식으로 계속 하려니 좀 불편했다. 그래서 결국 <em>Jekyll</em>을 설치했다..ㅋㅋ..</p>\n<p>로컬에 <strong>Jekyll</strong>을 굳이 설치한다는 것은 약간의 귀찮음을 동반하지만 몇 가지 장점이 있다.</p>\n<ul>\n<li>푸시하기 전에 로컬에서 포스트를 미리보기할 수 있다.</li>\n<li>블로그를 로컬에서 확인할 수 있기 때문에, 테마 수정을 하기 용이하다.</li>\n</ul>\n<p>그럼 본격적으로 <strong>Jekyll</strong>을 설치하고, 사용하는 커맨드를 소개하고자 한다.</p>\n<h2>Jekyll 설치하기</h2>\n<p>Jekyll을 설치하는 방법은 [공식홈페이지][ref]에서 너무 잘 안내되어 있다. 그냥 따라하면 쉽게 설치할 수 있다. 간단하게 적자면 다음과 같다:</p>\n<ol>\n<li><em>Ruby</em> 설치하기</li>\n<li><em>Homebrew</em> 설치하기</li>\n<li><em>rbenv</em> 설치 (여러 버전의 ruby를 관리하는데 사용된다고 한다.)</li>\n<li><em>Jekyll</em> 설치</li>\n</ol>\n<p>이렇게 로컬에 <em>Jekyll</em>을 설치한 다음에 새로운 블로그 프로젝트를 만들어 실행하는 방법은 다음과 같다.</p>\n<deckgo-highlight-code language=\"shell\"  >\n          <code slot=\"code\">$ jekyll new myblog\n$ cd myblog\n$ bundle exec jekyll serve</code>\n        </deckgo-highlight-code>\n<p>이렇게하면 새로운 블로그를 만들어 로컬 서버로 띄울수가 있고 <code class=\"language-text\">localhost:4000</code>으로 접속할 수 있다. clone한 github 블로그 프로젝트에 <code class=\"language-text\">bundle exec jekyll serve</code>를 하게 되면 <code class=\"language-text\">Could not locate Gemfile or .bundle/ directory</code> 오류가 난다.\n깃헙 프로젝트에서는 다음 커맨드들을 이용하면 된다.</p>\n<h2>Jekyll 빌드</h2>\n<p>소스를 빌드하려면 다음 커맨드를 입력한다.</p>\n<deckgo-highlight-code language=\"shell\"  >\n          <code slot=\"code\">$ jekyll build</code>\n        </deckgo-highlight-code>\n<p>커맨드를 실행하면 <strong>_site</strong>폴더, <strong>.jekyll-cache</strong>폴더 등이 생성되며, 만들어둔 <strong>md</strong>과 에셋들이 빌드된 형태로 만들어진다.</p>\n<h2>Jekyll 서버 띄우기</h2>\n<p>블로그를 로컬 서버에 띄우려면 다음과 같이 입력한다.</p>\n<deckgo-highlight-code language=\"shell\"  >\n          <code slot=\"code\">$ jekyll serve</code>\n        </deckgo-highlight-code>\n<p>이렇게 하면 <code class=\"language-text\">localhost:4000</code>으로 로컬에서 블로그를 확인할 수 있다.</p>\n<h2>Jekyll 빌드 클린</h2>\n<p>빌드 결과물들을 지우려면 다음과 같이 입력한다.</p>\n<deckgo-highlight-code language=\"shell\"  >\n          <code slot=\"code\">$ jekyll clean</code>\n        </deckgo-highlight-code>\n<p>하면 캐시 등이 사라 진다.</p>\n<p>이제 남은 것은 뭐다? <strong>해피 해킹!!</strong></p>\n<p>[ref]:[https://jekyllrb-ko.github.io/docs/installation/macos/]</p>","frontmatter":{"title":"로컬에서 Jekyll 확인하기 - 기본 Jekyll 커맨드","date":"October 09, 2020","description":null}}},"pageContext":{"next":{"fields":{"slug":"/post/2020-10-13-scrum-overview/"},"frontmatter":{"title":"스크럼의 이론과 실천에 대한 가벼운 안내서"}},"previous":{"fields":{"slug":"/post/2020-10-09-mds_store/"},"frontmatter":{"title":"Mac OS mds_store 리소스 점유율 문제 해결하기"}},"slug":"/post/2020-10-09-jekyll-preview-local/"}},"staticQueryHashes":["2880150720","63159454"]}