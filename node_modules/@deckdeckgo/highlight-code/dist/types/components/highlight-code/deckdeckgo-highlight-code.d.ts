import { DeckdeckgoHighlightCodeCarbonTheme } from '../../declarations/deckdeckgo-highlight-code-carbon-theme';
import { DeckdeckgoHighlightCodeAnchor } from '../../declarations/deckdeckgo-highlight-code-anchor';
import { DeckdeckgoHighlightCodeTerminal } from '../../declarations/deckdeckgo-highlight-code-terminal';
export declare class DeckdeckgoHighlightCode {
  el: HTMLElement;
  private prismLanguageLoaded;
  private codeDidChange;
  src: string;
  anchor: string;
  anchorZoom: string;
  hideAnchor: boolean;
  language: string;
  highlightLines: string;
  lineNumbers: boolean;
  terminal: DeckdeckgoHighlightCodeTerminal;
  editable: boolean;
  theme: DeckdeckgoHighlightCodeCarbonTheme;
  private anchorOffsetTop;
  private fetchOrParseAfterUpdate;
  private refCode;
  private themeStyle;
  private languagesToLoad;
  private loaded;
  private readonly debounceUpdateSlot;
  constructor();
  componentWillLoad(): Promise<void>;
  componentDidLoad(): Promise<void>;
  componentDidUpdate(): Promise<void>;
  loadTheme(): Promise<void>;
  languageLoaded($event: CustomEvent): Promise<void>;
  private fetchOrParse;
  private languageDidLoad;
  onLanguage(): Promise<void>;
  private loadLanguages;
  private initLanguagesToLoad;
  private loadLanguagesRequire;
  private loadScript;
  onLineNumbersChange(): Promise<void>;
  onCarbonChange(): Promise<void>;
  private loadGoogleFonts;
  load(): Promise<void>;
  private parseSlottedCode;
  fetchCode(): Promise<void>;
  private parseCode;
  private attachHighlightObserver;
  private addAnchors;
  private hasLineAnchor;
  private addHighlight;
  private findRowsToHighlight;
  findNextAnchor(enter: boolean): Promise<DeckdeckgoHighlightCodeAnchor>;
  zoomCode(zoom: boolean): Promise<void>;
  private hasLineZoom;
  private applyCode;
  private inputCode;
  private copyCodeToSlot;
  private edit;
  private catchTab;
  render(): any;
  private renderCarbon;
  private renderCarbonCircle;
  private renderUbuntu;
  private renderUbuntuCircle;
}
